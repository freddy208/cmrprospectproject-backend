// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

// =============================
// ENUMS
// =============================
enum UserRole {
  DIRECTEUR_GENERAL
  COUNTRY_MANAGER
  SALES_OFFICER
}

enum ProspectType {
  PARTICULIER
  ENTREPRISE
}

enum ProspectStatus {
  NOUVEAU
  QUALIFIE
  CONVERTI
  PAS_SERIEUX
  PERDU
}

enum ServiceType {
  SIMULATEUR
  FORMATION
}

enum LeadChannel {
  WHATSAPP
  EMAIL
  SITE_INTERNET
  VISITE_BUREAU
  VISITE_TERRAIN
  RECOMMANDATION
}

enum Status {
  ACTIVE
  INACTIVE
  DELETED
}

// =============================
// MODELS
// =============================
model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  firstName String
  lastName  String
  role      UserRole
  country   String? // Pour Country Manager et Sales Officer
  isActive  Boolean   @default(true)
  status    Status    @default(ACTIVE)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  createdProspects   Prospect[]    @relation("CreatedBy")
  assignedProspects  Prospect[]    @relation("AssignedTo")
  comments           Comment[]
  createdFormations  Formation[]
  createdSimulateurs Simulateur[]
  interactions       Interaction[]

  @@index([email])
  @@index([role])
  @@index([country])
  @@index([status])
}

model Prospect {
  id            String         @id @default(uuid())
  type          ProspectType
  email         String
  country       String
  phone         String
  whatsapp      String?
  leadChannel   LeadChannel
  serviceType   ServiceType
  status        ProspectStatus @default(NOUVEAU)
  genericStatus Status         @default(ACTIVE)
  nextCallDate  DateTime?

  // Particulier
  firstName String?
  lastName  String?

  // Entreprise
  companyName      String?
  contactFirstName String?
  contactLastName  String?

  // Relations services
  formationId  String?
  formation    Formation?  @relation(fields: [formationId], references: [id])
  simulateurId String?
  simulateur   Simulateur? @relation(fields: [simulateurId], references: [id])

  // Affectation
  createdById  String
  createdBy    User    @relation("CreatedBy", fields: [createdById], references: [id])
  assignedToId String?
  assignedTo   User?   @relation("AssignedTo", fields: [assignedToId], references: [id])

  // Timestamps
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  convertedAt DateTime?

  // Relations
  comments     Comment[]
  interactions Interaction[]

  @@index([type])
  @@index([status])
  @@index([country])
  @@index([assignedToId])
  @@index([createdById])
  @@index([email])
}

model Comment {
  id         String   @id @default(uuid())
  content    String   @db.Text
  prospectId String
  prospect   Prospect @relation(fields: [prospectId], references: [id], onDelete: Cascade)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  status     Status   @default(ACTIVE)
  createdAt  DateTime @default(now())

  @@index([prospectId])
  @@index([userId])
  @@index([createdAt])
}

model Interaction {
  id         String       @id @default(uuid())
  prospectId String
  prospect   Prospect     @relation(fields: [prospectId], references: [id], onDelete: Cascade)
  userId     String
  user       User         @relation(fields: [userId], references: [id])
  type       String // "call", "email", "meeting", "whatsapp"
  channel    LeadChannel?
  notes      String       @db.Text
  duration   Int? // en minutes
  status     Status       @default(ACTIVE)
  createdAt  DateTime     @default(now())

  @@index([prospectId])
  @@index([userId])
  @@index([createdAt])
}

model Formation {
  id          String     @id @default(uuid())
  name        String
  price       Float
  description String     @db.Text
  createdById String
  createdBy   User       @relation(fields: [createdById], references: [id])
  status      Status     @default(ACTIVE)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  prospects   Prospect[]

  @@index([name])
}

model Simulateur {
  id           String     @id @default(uuid())
  name         String
  monthlyPrice Float
  description  String     @db.Text
  createdById  String
  createdBy    User       @relation(fields: [createdById], references: [id])
  status       Status     @default(ACTIVE)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  prospects    Prospect[]

  @@index([name])
}
